name: Python package

on:
  push:
    branches:
      - Dev

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set API Key
      run: |
        echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi


    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      env:
        API_KEY: ${{ secrets.API_KEY }}

    - name: Install html5validator
      run: pip install html5validator

    - name: Validate HTML
      run: html5validator --root . --ignore 'regex_to_ignore_errors'

    - name: Run unit tests
      run: python -m unittest tests/test_functionalities.py
      env:
        API_KEY: ${{ secrets.API_KEY }}
  
  create-pr:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/Dev'
    steps:
      - uses: actions/checkout@v3
      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.PERSONAL_TOKEN }}
          pr_title: "Merge Dev into Main"
          pr_body: "This is an automated pull request to merge changes from the Dev branch into Main."
          pr_label: "automerge"
          source_branch: "Dev"
          destination_branch: "main"